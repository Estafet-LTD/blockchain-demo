apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: node-config
parameters:
- description: Defines the node
  name: NODE
  required: true     
- description: Defines the node key to use
  name: NODEKEY
  required: true      
- description: Defines the node port starting with 85
  name: NODEPORT_85
  required: true      
- description: Defines the node port starting with 30
  name: NODEPORT_30
  required: true      
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: ${NODE}
    name: ${NODE}
  spec:
    replicas: 1
    selector:
      io.kompose.service: ${NODE}
    strategy:
      resources: {}
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: ${NODE}
      spec:
        containers:
          - env:
              - name: NODEKEY
                value: ${NODEKEY}      
            image: ' '
            name: autonity-${NODE}
            ports:
            - containerPort: 8545
            - containerPort: 30303
            - containerPort: 30303
              protocol: UDP
            resources: {}
        restartPolicy: Always
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - autonity-${NODE}
        from:
          kind: ImageStreamTag
          name: ${NODE}:helloworld
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: ${NODE}
    name: ${NODE}
  spec:
    ports:
    - name: "${NODEPORT_85}"
      port: ${NODEPORT_85}
      targetPort: 8545
    - name: "${NODEPORT_30}"
      port: ${NODEPORT_30}
      targetPort: 30303
    - name: ${NODEPORT_30}-udp
      port: ${NODEPORT_30}
      protocol: UDP
      targetPort: 30303
    selector:
      io.kompose.service: ${NODE}
  status:
    loadBalancer: {}
